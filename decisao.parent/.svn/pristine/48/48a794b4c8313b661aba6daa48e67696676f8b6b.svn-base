package br.jus.stf.estf.decisao.api;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import br.gov.stf.estf.documento.model.service.ControleVistaService;
import br.gov.stf.estf.entidade.documento.ControleVista;
import br.gov.stf.framework.model.service.ServiceException;
import br.gov.stf.framework.util.ApplicationFactory;
import br.jus.stf.estf.decisao.objetoincidente.service.DevolverVistaService;
import br.jus.stf.estf.decisao.support.security.Principal;

// TODO: refatorar para usar o spring-webmvc em vez do servlet
@Controller
public class DevolverVistasVencidasController extends HttpServlet {

	private static final long serialVersionUID = -1966350281237303814L;

	DevolverVistaService devolverVistaService;

	ControleVistaService controleVistaService;

	private WebApplicationContext context;

	private ServletContext sc;

	public DevolverVistasVencidasController() {
		super();
	}

	private void devolverVistasVencidas(Principal principal) {
		try {
			List<ControleVista> listaVistas = controleVistaService.listarVistasVencidas();
			List<ReferendarDecisaoDto> lista = new ArrayList<ReferendarDecisaoDto>();
			Boolean ignorarCpc = false;
			
			for (ControleVista cv : listaVistas)
				lista.add(new ReferendarDecisaoDto(cv.getObjetoIncidenteId(), ignorarCpc));
			
			devolverVistaService.devolverVista(lista, principal);
		} catch (ServiceException e) {
			e.printStackTrace();
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		sc = request.getSession().getServletContext();
		context = WebApplicationContextUtils.getRequiredWebApplicationContext(sc);

		devolverVistaService = (DevolverVistaService) getService("devolverVistaService");
		controleVistaService = (ControleVistaService) getService("controleVistaService");
		
		devolverVistasVencidas(getPrincipal());
	}

	public Object getService(String nomeServico) {
		return ApplicationFactory.getInstance().getServiceLocator(context).getService(nomeServico);
	}

	protected Principal getPrincipal() {
		return (Principal) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
	}
}