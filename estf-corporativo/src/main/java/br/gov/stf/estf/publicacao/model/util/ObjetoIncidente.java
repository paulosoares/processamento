//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.07.29 at 12:24:44 PM BRT 
//

package br.gov.stf.estf.publicacao.model.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>Java class for ObjetoIncidente complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ObjetoIncidente">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="partes" type="{}Partes"/>
 *       &lt;/sequence>
 *       &lt;attribute name="objetoIncidente" use="required" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="descricao" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ObjetoIncidente", propOrder = { "ministros", "partes" })
public class ObjetoIncidente {

	@XmlElement(required = true)
	protected Partes partes;
	@XmlAttribute(required = true)
	protected long objetoIncidente;
	@XmlAttribute(required = true)
	protected String descricao;
	@XmlElement(required = true)
	protected Ministros ministros;

	public Ministros getMinistros() {
		return ministros;
	}

	public void setMinistros(Ministros ministros) {
		this.ministros = ministros;
	}

	/**
	 * Gets the value of the partes property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link Partes }
	 *     
	 */
	public Partes getPartes() {
		return partes;
	}

	/**
	 * Sets the value of the partes property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link Partes }
	 *     
	 */
	public void setPartes(Partes value) {
		this.partes = value;
	}

	/**
	 * Gets the value of the objetoIncidente property.
	 * 
	 */
	public long getObjetoIncidente() {
		return objetoIncidente;
	}

	/**
	 * Sets the value of the objetoIncidente property.
	 * 
	 */
	public void setObjetoIncidente(long value) {
		this.objetoIncidente = value;
	}

	/**
	 * Gets the value of the descricao property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link String }
	 *     
	 */
	public String getDescricao() {
		return descricao;
	}

	/**
	 * Sets the value of the descricao property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link String }
	 *     
	 */
	public void setDescricao(String value) {
		this.descricao = value;
	}

	public byte[] toXML() throws JAXBException, UnsupportedEncodingException {
		JAXBContext context = JAXBContext.newInstance(ObjetoIncidente.class.getPackage().getName());
		Marshaller marshaller = context.createMarshaller();
		marshaller.setProperty("jaxb.encoding", "ISO-8859-1");
		JAXBElement<ObjetoIncidente> element = new ObjectFactory().createObjetoIncidente(this);
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		marshaller.marshal(element, baos);

		return new String(baos.toByteArray()).getBytes("ISO-8859-1");
	}

	@SuppressWarnings("unchecked")
	public static ObjetoIncidente getInstance(byte[] xml) throws JAXBException {
		JAXBContext context = JAXBContext.newInstance(ObjetoIncidente.class.getPackage().getName());
		Unmarshaller unmarshaller = context.createUnmarshaller();
		JAXBElement<ObjetoIncidente> element = (JAXBElement<ObjetoIncidente>) unmarshaller
				.unmarshal(new ByteArrayInputStream(xml));
		ObjetoIncidente objetoIncidente = element.getValue();

		return objetoIncidente;
	}

}
